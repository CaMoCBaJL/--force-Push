// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace MySiteServer.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\Анотон\source\repos\MySiteServer\MySiteServer\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Анотон\source\repos\MySiteServer\MySiteServer\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Анотон\source\repos\MySiteServer\MySiteServer\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\Анотон\source\repos\MySiteServer\MySiteServer\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\Анотон\source\repos\MySiteServer\MySiteServer\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\Анотон\source\repos\MySiteServer\MySiteServer\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\Анотон\source\repos\MySiteServer\MySiteServer\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\Анотон\source\repos\MySiteServer\MySiteServer\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\Анотон\source\repos\MySiteServer\MySiteServer\_Imports.razor"
using MySiteServer;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\Анотон\source\repos\MySiteServer\MySiteServer\_Imports.razor"
using MySiteServer.Shared;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/reg/{usrId}")]
    public partial class Registration : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 71 "C:\Users\Анотон\source\repos\MySiteServer\MySiteServer\Pages\Registration.razor"
       
    [Parameter] public string usrId { get; set; }
    string userName;
    string login;
    string password;
    bool isAdmin;
    byte regCondition;

    protected override void OnInitialized()
    {
        isAdmin = false;
        regCondition = 255;
        if(usrId != "addUser")
        {
            User user = repository.GetAllUsers().Where(usr => usr.UserId == int.Parse(usrId)).First();
            userName = user.UserName;
            login = user.L0gin;
            password = user.Passwrd;
        }
    }

    void IsAdmin(ChangeEventArgs args)
    {
        if (args.Value.ToString() == "admin" && !isAdmin)
            isAdmin = true;
    }

    void ChangeUserName()
    {
        User user = repository.GetAllUsers().Where(usr => usr.UserId == int.Parse(usrId)).First();
        user.UserName = userName;
        repository.UserInfoChanged(user);
    }

    void ChangeLogin()
    {
        foreach (var item in repository.GetAllUsers())
        {
            if (item.L0gin == login && item.Passwrd == password)
            {
                regCondition = 1;
                return;
            }
        }
        User user = repository.GetAllUsers().Where(usr => usr.UserId == int.Parse(usrId)).First();
        user.UserName = userName;
        repository.UserInfoChanged(user);
    }

    void ChangePassword()
    {
        foreach (var item in repository.GetAllUsers())
        {
            if (item.L0gin == login && item.Passwrd == password)
            {
                regCondition = 1;
                return;
            }
        }
        User user = repository.GetAllUsers().Where(usr => usr.UserId == int.Parse(usrId)).First();
        user.UserName = userName;
        repository.UserInfoChanged(user);
    }

    void UserRegistration()
    {
        if (string.IsNullOrEmpty(userName) || string.IsNullOrWhiteSpace(userName) || string.IsNullOrEmpty(login) || string.IsNullOrWhiteSpace(login) ||
            string.IsNullOrEmpty(password) || string.IsNullOrWhiteSpace(password))
            regCondition = 0;
        else
        {
            foreach (var item in repository.GetAllUsers())
            {
                if (item.L0gin == login && item.Passwrd == password)
                {
                    regCondition = 1;
                    return;
                }
            }
            regCondition = 2;
            repository.AddUser(new User() { L0gin = login, Passwrd = password, UserCart = null, IsAdmin = isAdmin, UserName = userName });
        }
    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private Data.Repository.IRepository repository { get; set; }
    }
}
#pragma warning restore 1591
